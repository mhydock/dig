{"version":3,"sources":["scripts/ts/Digdown/Core/Common.ts","scripts/ts/Digdown/Core/Block.ts","scripts/ts/Digdown/Core/Grid.ts","scripts/ts/Digdown/Core/Player.ts","scripts/ts/Digdown/Core/Listener.ts","scripts/ts/Digdown/Core/Technology.ts","scripts/ts/Digdown/Core/TechnologyTree.ts","scripts/ts/Digdown/Core/ToolsInventory.ts","scripts/ts/Digdown/Core/ItemsInventory.ts","scripts/ts/Digdown/Core/ItemsFactory.ts","scripts/ts/Digdown/UI/Game.ts","scripts/ts/Digdown/Core/Item.ts","scripts/ts/Digdown/UI/ItemBox.ts","scripts/ts/Digdown/UI/Main.ts","scripts/ts/Digdown/UI/TechBox.ts","scripts/ts/Digdown/Core/Tool.ts","scripts/ts/Digdown/UI/ToolBox.ts","scripts/ts/Digdown/Core/ItemChance.ts"],"names":[],"mappings":"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","file":"../dig/game.js","sourcesContent":["namespace Digdown.Core {\r\n    let printLogs = true;\r\n\r\n    export function log (message : any) {\r\n        if (printLogs)\r\n            console.log(message);\r\n    }\r\n\r\n    export function toDecimal(val : number, dec : number) : string {\r\n        return Number(val).toString().match(/^\\d+(?:\\.\\d{0,2})?/)[0];\r\n    }\r\n\r\n    var Suffix = ['','k','m','b','t'];\r\n\r\n    export function withSuffix(value : number) : string {\r\n        if (value < 1000)\r\n            return value.toString();\r\n        \r\n        let suff : number;\r\n        for (suff = 0; value >= 1000; suff++)\r\n            value /= 1000;\r\n                    \r\n        let text : string;\r\n        if (suff > 0)\r\n            text = toDecimal(value, 2);        \r\n        else\r\n            text = value.toString();\r\n\r\n        return text + Suffix[suff];\r\n    }\r\n\r\n    export enum Orientation {\r\n        NORTH = 1,\r\n        EAST,\r\n        SOUTH,\r\n        WEST\r\n    };\r\n\r\n\r\n    export interface CostFunction { (baseCost : number, level : number) : number }\r\n\r\n    export interface CostListenerFunc { (cost : number) : void }\r\n    export interface LevelListenerFunc { (level : number) : void }\r\n    export interface KnownListenerFunc { (known : boolean) : void }\r\n    export interface AmountListenerFunc { (amount : number) : void }\r\n    export interface VisibleListenerFunc { (visible : boolean) : void }\r\n}","function log2(value : number) : number {\r\n    return Math.log(value) / Math.log(2);\r\n}\r\n\r\nfunction log10(value : number) : number {\r\n    return Math.log(value) / Math.log(10);\r\n}\r\n\r\nnamespace Digdown.Core {\r\n    export interface BlockClearedListenerFunc { (items : ItemPrize) : void }\r\n\r\n    const BASE_DIGS_PER_UNIT_POWER = 2.0;\r\n    const BASE_BLOCK_DURABILITY = 255;\r\n    const BASE_POWER_MULTIPLIER = BASE_BLOCK_DURABILITY/BASE_DIGS_PER_UNIT_POWER;\r\n    const BLOCK_TYPE_PHRASE = [\r\n        'Dirt',\r\n        'Clay',\r\n        'Gravel',\r\n        'Limestone',\r\n        'Sandstone',\r\n        'Marble',\r\n        'Granite',\r\n        'Bedrock',\r\n    ]\r\n\r\n    export enum BlockType {\r\n        SDIRT = 1,\r\n        MDIRT,\r\n        HDIRT,\r\n        BDROCK\r\n    }\r\n\r\n    export class Block {\r\n        private type : number;\r\n        private health : number;\r\n        private durability : number;\r\n\r\n        constructor(private depth: number,\r\n                    private itemsFactory : ItemsFactory,\r\n                    private blockClearedListener : Listener<BlockClearedListenerFunc>) {\r\n            \r\n            this.health = BASE_BLOCK_DURABILITY;\r\n            this.durability = Math.ceil((depth * depth + 1)/100) * BASE_DIGS_PER_UNIT_POWER;\r\n            this.type = Math.ceil(Math.log(this.durability / Math.LN10));\r\n        }\r\n\r\n        dig(power : number, x : number, y : number) : number {\r\n            let damage : number = Math.ceil(power * BASE_POWER_MULTIPLIER / this.durability);\r\n            let remainingHP : number = this.health;\r\n            this.health -= Math.min(remainingHP, damage);\r\n            \r\n            console.log('Caused ' + damage + ' damage to block [' + x + ',' + y +']');\r\n            if (this.health == 0)\r\n            {\r\n                console.log('Block obliterated');\r\n                let itemsProduced = this.itemsFactory.produceItems(this.Type);\r\n                this.blockClearedListener.callAll(itemsProduced);\r\n            }\r\n\r\n            return damage;\r\n        }\r\n\r\n        get Type() : number {\r\n            return this.type;\r\n        }\r\n\r\n        get TypePhrase() : string {\r\n            return BLOCK_TYPE_PHRASE[this.type];\r\n        }\r\n\r\n        get Depth() : number {\r\n            return this.depth;\r\n        }\r\n\r\n        get Health() : number {\r\n            return this.health;\r\n        }\r\n\r\n        get IsCleared() : boolean {\r\n            return this.health == 0;\r\n        }\r\n\r\n        get HealthPercent() : number {\r\n            return this.health / BASE_BLOCK_DURABILITY;\r\n        }\r\n\r\n        get Durability() : number {\r\n            return this.durability;\r\n        }\r\n    }\r\n}","/// <reference path='Block.ts'/>\r\n\r\nnamespace Digdown.Core {\r\n    const WIDTH = 64;         // blocks/row\r\n    const HEIGHT = 10240;     // rows\r\n\r\n    export interface Point {\r\n        x : number;\r\n        y : number;\r\n    }\r\n\r\n    export class Grid {\r\n        grid = new Array<Block>(WIDTH * HEIGHT);\r\n\r\n\t\titemsFactory : ItemsFactory;\r\n\t    blockClearedListeners = new Listener<BlockClearedListenerFunc>();\r\n    \r\n        get Width() : number { return WIDTH; }\r\n        get Height() : number { return HEIGHT; }        \r\n\r\n\t\tgetRow(y : number) : Array<Block> {\r\n            return this.grid.slice(y*WIDTH, (y+1)*WIDTH);\r\n        }\r\n\r\n        healthPercent(x: number, y: number) : number {\r\n            let bl = this.block(x,y);\r\n            if (bl != null)\r\n                return bl.HealthPercent;\r\n            \r\n            return -1;\r\n        }\r\n\r\n        isCleared(x: number, y: number) : boolean {\r\n            let bl = this.block(x,y);\r\n            if (bl != null)\r\n                return bl.IsCleared;\r\n            \r\n            return false;\r\n        }\r\n\r\n        block(x: number, y: number) : Block {\r\n            if (x >= 0 && x < WIDTH &&\r\n                y >= 0 && y < HEIGHT)\r\n            {\r\n                let i = y * WIDTH + x;\r\n                if (this.grid[i] == null)\r\n                    this.grid[i] = new Block(y, this.itemsFactory, this.blockClearedListeners);\r\n\r\n                return this.grid[i];             \r\n            }\r\n                \r\n            return null;\r\n        }\r\n\r\n        blocks(coords: Array<Point>) : Array<Block> {\r\n            let bl : Block;\r\n            let blocks = Array<Block>();\r\n            for (let coord of coords) {\r\n                if ((bl = this.block(coord.x, coord.y)) != null)\r\n                    blocks.push(bl);\r\n            }\r\n\r\n            return blocks;\r\n        }\r\n        \r\n\t\taddBlockClearedListener(func : BlockClearedListenerFunc) {\r\n\t\t    return this.blockClearedListeners.add(func);\r\n\t\t};\r\n    }\r\n}\r\n","namespace Digdown.Core {\r\n\r\n    export class Player {\r\n        constructor (private x: number,\r\n                     private y: number) {}\r\n\r\n        orient = Orientation.SOUTH;\r\n\r\n        grid : Grid;\r\n        tools : ToolsInventory;    \r\n\r\n        step(x: number, y: number) : number {\r\n            if (x < 0 || x >= this.grid.Width ||\r\n                y < -1 || y >= this.grid.Height)\r\n                return -1;\r\n            \r\n            log('Attempting to move to [' + x + ',' + y + ']');\r\n\r\n            // if player is above ground, just let them move.\r\n            if (this.y == -1 && y == this.y)\r\n            {\r\n                log('Player is above ground');\r\n                this.x = x;\r\n                return 0;            \r\n            }\r\n                \r\n            if (this.grid.isCleared(x, y))\r\n            {\r\n                log('Path is clear');\r\n                this.y = y;\r\n                this.x = x;\r\n                return -1;            \r\n            }\r\n            else\r\n            {\r\n                log('Path is not clear');\r\n                var damage = this.tools.dig(this.grid, x, y, this.orient);\r\n                \r\n                if (this.tools.canMoveAndStep() &&\r\n                    this.grid.isCleared(x,y))\r\n                {\r\n                    this.y = y;\r\n                    this.x = x;\r\n                }\r\n                \r\n                return damage;   \r\n            }\r\n        }\r\n        \r\n        moveUp() : number {\r\n            this.orient = Orientation.NORTH;\r\n            return this.step(this.x, this.y-1);\r\n        }\r\n        \r\n        moveDown() : number {\r\n            this.orient = Orientation.SOUTH;\r\n            return this.step(this.x, this.y+1);\r\n        }\r\n        \r\n        moveLeft() : number {\r\n            this.orient = Orientation.WEST;\r\n            return this.step(this.x-1, this.y);\r\n        }\r\n        \r\n        moveRight() : number {\r\n            this.orient = Orientation.EAST;\r\n            return this.step(this.x+1, this.y);\r\n        }\r\n\r\n        faceUp() : void {\r\n            this.orient = Orientation.NORTH;\r\n        }\r\n        \r\n        faceDown() : void {\r\n            this.orient = Orientation.SOUTH;\r\n        }\r\n        \r\n        faceLeft() : void {\r\n            this.orient = Orientation.WEST;\r\n        }\r\n        \r\n        faceRight() : void {\r\n            this.orient = Orientation.EAST;\r\n        }\r\n        \r\n        get X() : number {\r\n            return this.x;\r\n        }\r\n        \r\n        get Y() : number {\r\n            return this.y;\r\n        }\r\n\r\n        get Orientation() : number {\r\n            return this.orient;\r\n        }\r\n    }\r\n}","namespace Digdown.Core {\r\n\r\n    export class Listener<T extends Function> {\r\n        \r\n        private listeners : { [key: number] : T } = {};\r\n        private listenerID = 0;\r\n        \r\n        add(func : T) : number {\r\n            this.listeners[this.listenerID] = func;\r\n            let id = this.listenerID;\r\n            this.listenerID++;\r\n            return id;\r\n        }\r\n        \r\n        remove(id : number) {\r\n            delete this.listeners[id];\r\n        }\r\n        \r\n        callAll(...args : any[]) {\r\n            for(let i in this.listeners)\r\n                if (this.listeners.hasOwnProperty(i))\r\n                    this.listeners[i].apply(this, args); \r\n        }\r\n    }\r\n}","/// <reference path='Listener.ts'/>\r\n\r\nnamespace Digdown.Core {\r\n\r\n    export class Technology {\r\n        private static defaultCostFunc : CostFunction = (baseCost, level) => baseCost * Math.pow(level+1, 2);\r\n\r\n        private level = 0;\r\n        private maxLevel = 10;\r\n\t\tprivate currCost : number;\r\n\t\t\r\n        private costListeners = new Listener<CostListenerFunc>();\r\n        private levelListeners = new Listener<LevelListenerFunc>();\r\n        private visibleListeners = new Listener<VisibleListenerFunc>();\r\n\r\n        constructor (private name : string,\r\n                     private baseCost : number,\r\n                     private visible : boolean,\r\n                     private dependTech : Technology = null,\r\n                     private dependLevel : number = 0,\r\n                     private costFunc : CostFunction = Technology.defaultCostFunc) {\r\n\r\n            if (dependTech)\r\n                dependTech.addLevelListener(this.checkDependencyLevel);\r\n                \r\n            this.currCost = baseCost;\r\n        }\r\n        \r\n        private checkDependencyLevel = (level : number) => {\r\n            if (level == this.dependLevel)\r\n            {\r\n                this.visible = true;\r\n                this.visibleListeners.callAll(this.visible);\r\n            }\r\n        }       \r\n        \r\n        tryResearch(money : number) : number {\r\n            if (money >= this.currCost)\r\n            {\r\n                var cost = this.currCost;\r\n                \r\n                this.level++;\r\n                \r\n                this.currCost = this.costFunc(this.baseCost, this.level+1);\r\n                this.costListeners.callAll(this.ResearchCost);\r\n                this.levelListeners.callAll(this.level);\r\n                \r\n                return cost;\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        get Name() : string {\r\n            return this.name;\r\n        }\r\n\r\n        get Level() : number {\r\n            return this.level;\r\n        }\r\n        \r\n        get MaxLevel() : number {\r\n        \treturn this.maxLevel;\r\n        }\r\n\r\n        get ResearchCost() : number {\r\n            return this.currCost\r\n        }\r\n        \r\n        get IsVisible() : boolean {\r\n            return this.visible;\r\n        }\r\n        \r\n        addCostListener(func : CostListenerFunc) {\r\n            this.costListeners.add(func);\r\n        }\r\n        \r\n        addLevelListener(func : LevelListenerFunc) {\r\n            this.levelListeners.add(func);\r\n        }\r\n        \r\n        addVisibilityListener(func : VisibleListenerFunc) {\r\n            this.visibleListeners.add(func);\r\n        }\r\n    }\r\n}\r\n","/// <reference path='Technology.ts'/>\r\n\r\nnamespace Digdown.Core {\r\n    export class TechnologyTree {\r\n        private shovel = new Technology('Shovels and Diggers',                  100,    true,   null,   0);\r\n        private hammer = new Technology('Hammers and Picks',                    500,    false,  this.shovel, 1);\r\n        private drills = new Technology('Drills and Borers',                    1000,   false,  this.hammer, 1);\r\n        private water1 = new Technology('Low-Pressure Water-based Erosion',     100,    false,  this.shovel, 1);\r\n        private water2 = new Technology('High-pressure Water-based Erosion',    1000,   false,  this.water1, 2);\r\n        private explos = new Technology('Explosives',                           1000,   false,  this.hammer, 3);        \r\n        private technologies: Technology[];\r\n\r\n        constructor() {\r\n            this.technologies = [this.shovel,\r\n                                 this.hammer,\r\n                                 this.drills,\r\n                                 this.water1,\r\n                                 this.water2,\r\n                                 this.explos];\r\n        }\r\n        \r\n        get SHOVEL() { return this.shovel; }\r\n        get HAMMER() { return this.hammer; }\r\n        get DRILLS() { return this.drills; }\r\n        get WATER1() { return this.water1; }\r\n        get WATER2() { return this.water2; }\r\n        get EXPLOS() { return this.explos; }\r\n\r\n        get Technologies() : Technology[] {\r\n            return this.technologies;\r\n        }\r\n    }\r\n}","/// <reference path='Grid.ts'/>\r\n/// <reference path='TechnologyTree.ts'/>\r\n\r\nnamespace Digdown.Core {\r\n    export class ToolsInventory {\r\n\r\n        constructor(private techTree : TechnologyTree) {\r\n            if (typeof techTree === 'undefined' || techTree == null)\r\n                throw 'Tech Tree is undefined or null. Cannot create tools.';\r\n        }\r\n        \r\n        private tools : { [key: string] : Tool } = {\r\n            'Trowel' : new Tool('Trowel',                1, 1,      5            , this.techTree.SHOVEL, 1, 0),\r\n            'GdHose' : new Tool('Garden Hose',           0, 2,      10           , this.techTree.WATER1, 1, 1),\r\n            'Shovel' : new Tool('Shovel',                1, 4,      20           , this.techTree.SHOVEL, 1, 1),\r\n            'PickAx' : new Tool('Pickaxe',               0, 30,     50           , this.techTree.HAMMER, 1, 1),\r\n            'Sledge' : new Tool('Sledge Hammer',         0, 40,     100          , this.techTree.HAMMER, 1, 2),\r\n            'PrsWsh' : new Tool('Pressure Washer',       0, 100,    300          , this.techTree.WATER2, 1, 1),\r\n            'FrHose' : new Tool('Firehose',              0, 200,    200          , this.techTree.WATER1, 1, 2),\r\n            'JakHmr' : new Tool('Jackhammer',            0, 200,    500          , this.techTree.HAMMER, 1, 3),\r\n            'SDrill' : new Tool('Small Drill',           0, 400,    1200         , this.techTree.DRILLS, 1, 1),     // well-boring drill\r\n            'SXcvtr' : new Tool('Small Excavator',       0, 1000,   25000        , this.techTree.SHOVEL, 1, 2),     // small, Bobcat-esque excavator\r\n            'HydMin' : new Tool('Hydraulic Mining',      0, 2000,   5000         , this.techTree.WATER2, 1, 2),\r\n            'MDrill' : new Tool('Medium Drill',          0, 4000,   10000        , this.techTree.DRILLS, 1, 2),     // subway tunnel drill\r\n            'MXcvtr' : new Tool('Medium Excavator',      0, 8000,   150000       , this.techTree.SHOVEL, 1, 3),     // small/medium construction excavator\r\n            'Dynmte' : new Tool('Dynamite',              0, 4000,   15000        , this.techTree.EXPLOS, 1, 1),\r\n            'LDrill' : new Tool('Large Drill',           0, 10000,  500000       , this.techTree.DRILLS, 1, 3),     // mountain tunnel drill\r\n            'LXcvtr' : new Tool('Large Excavator',       0, 20000,  300000       , this.techTree.SHOVEL, 1, 4),     // large construction excavator\r\n            'PolExp' : new Tool('Polymer Explosives',    0, 40000,  150000       , this.techTree.EXPLOS, 1, 2),\r\n            'GDrill' : new Tool('GIGA DRILL',            0, 100000, 80000000     , this.techTree.DRILLS, 1, 4),     // Big Bertha, world's largest drill\r\n            'Bagger' : new Tool('GIANT EXCAVATOR',       0, 200000, 100000000    , this.techTree.SHOVEL, 1, 5),     // Bagger 293, world's largest excavator\r\n            'NukExp' : new Tool('Nuclear Explosives',    0, 400000, 1000000000   , this.techTree.EXPLOS, 1, 3),\r\n        }\r\n\r\n        get Tools() { \r\n            return this.tools;\r\n        }\r\n        \r\n        get Power() : number {\r\n            var total = 0; \r\n            for (var i in this.tools)\r\n            {\r\n                if (this.tools.hasOwnProperty(i))\r\n                    total += this.tools[i].TotalPower;\r\n            }\r\n            return total;\r\n        }\r\n        \r\n        canMoveAndStep() : boolean { \r\n            return  this.tools['Shovel'].Amount > 0 ||\r\n                    this.tools['SDrill'].Amount > 0 ||\r\n                    this.tools['LDrill'].Amount > 0 ||\r\n                    this.tools['GDrill'].Amount > 0;\r\n        }\r\n\r\n        dig(grid : Grid, x : number, y : number, orient: Orientation) : number {\r\n            return 0;\r\n        }\r\n    }\r\n}","namespace Digdown.Core {\r\n    export class ItemsInventory {\r\n   \r\n        private items : { [key: string] : Item } = {\r\n            'CMDIRT': new Item('Common Dirt',       'Just some dirt, no big deal.',                             0, 1,   true),\r\n            'TFCLAY': new Item('Tough Clay',        'Tough clay, not good for much.',                           0, 2,   false),\r\n            'GDDIRT': new Item('Quality Topsoil',   'The good stuff; great for gardens.',                       0, 3,   false),\r\n            'SFCLAY': new Item('Soft Clay',         'Soft, smooth clay; great for ceramics.',                   0, 4,   false),\r\n            'GRAVEL': new Item('Gravel',            'Tiny rocks, good for cheap driveways/parking lots.',       0, 5,   false),\r\n            'SMSTNS': new Item('Small Stones',      'Small, smooth rocks. Would look nice in a garden.',        0, 10,  false),\r\n            'LGSTNS': new Item('Large Stones',      'Large, heavy stones. Could have decorative uses?',         0, 25,  false),\r\n            'HGSTNS': new Item('Huge Stones',       'Very large stones. Can probably be used in sculpture.',    0, 50,  false),\r\n            'BOULDR': new Item('Boulder',           'A huge rock; not much you can do with it but break it.',   0, 100, false),\r\n        }\r\n        \r\n        get Items() {\r\n            return this.items;\r\n        }\r\n    }\r\n}","\r\nnamespace Digdown.Core {\r\n    export class ItemsFactory {\r\n\r\n        constructor (private itemsInventory : ItemsInventory) {}\r\n\r\n        produceListeners = new Listener();\r\n        \r\n        items = this.itemsInventory.Items;\r\n        itemMap = [\r\n            [\r\n                new ItemChance(this.items.CMDIRT, 1.0, 1, 10),\r\n                new ItemChance(this.items.GDDIRT, 0.5, 1, 5),\r\n                new ItemChance(this.items.TFCLAY, 0.4, 1, 5),\r\n                new ItemChance(this.items.SFCLAY, 0.2, 1, 2),\r\n                new ItemChance(this.items.SMSTNS, 0.1, 1, 3),\r\n            ],\r\n            [\r\n                new ItemChance(this.items.TFCLAY, 1.0, 1, 10),\r\n                new ItemChance(this.items.SFCLAY, 0.5, 1, 5),\r\n                new ItemChance(this.items.GRAVEL, 0.2, 1, 3),\r\n                new ItemChance(this.items.SMSTNS, 0.1, 1, 2),\r\n                new ItemChance(this.items.LGSTNS, 0.1, 1, 1),\r\n            ],\r\n            [\r\n                new ItemChance(this.items.GRAVEL, 1.0, 1, 10),\r\n                new ItemChance(this.items.TFCLAY, 0.4, 1, 5),\r\n                new ItemChance(this.items.SMSTNS, 0.3, 1, 3),\r\n                new ItemChance(this.items.LGSTNS, 0.1, 1, 2),\r\n            ],\r\n            [\r\n                new ItemChance(this.items.SMSTNS, 1.0, 1, 10),\r\n                new ItemChance(this.items.LGSTNS, 0.4, 1, 5),\r\n                new ItemChance(this.items.GRAVEL, 0.2, 1, 5),\r\n                new ItemChance(this.items.HGSTNS, 0.1, 1, 2),\r\n            ],\r\n            [\r\n                new ItemChance(this.items.LGSTNS, 1.0, 1, 10),\r\n                new ItemChance(this.items.SMSTNS, 0.4, 1, 10),\r\n                new ItemChance(this.items.HGSTNS, 0.4, 1, 5),\r\n                new ItemChance(this.items.GRAVEL, 0.1, 1, 3),\r\n                new ItemChance(this.items.BOULDR, 0.1, 1, 1),\r\n            ],\r\n            [\r\n                \r\n            ],\r\n            [\r\n                \r\n            ],\r\n            [\r\n                \r\n            ]\r\n        ];\r\n        \r\n        produceItems(type : number) {\r\n            type -= 1;      // Type/array offset\r\n            \r\n            if (type > this.itemMap.length)\r\n                return;\r\n            \r\n            var chances = this.itemMap[type];\r\n            for (var i in chances)\r\n            {\r\n                var result = chances[i].rollForItems();\r\n                if (result !== null)\r\n                {\r\n                    this.produceListeners.callAll(result);\r\n                    result.item.addMany(result.amount);\r\n                }\r\n            }\r\n        }\r\n        \r\n        addProduceListener(func : ProduceListenerFunc) {\r\n            return this.produceListeners.add(func);\r\n        }\r\n    }\r\n}","/// <reference path='../Core/Common.ts'/>\r\n/// <reference path='../Core/Grid.ts'/>\r\n/// <reference path='../Core/Player.ts'/>\r\n/// <reference path='../Core/TechnologyTree.ts'/>\r\n/// <reference path='../Core/ToolsInventory.ts'/>\r\n/// <reference path='../Core/ItemsInventory.ts'/>\r\n/// <reference path='../Core/ItemsFactory.ts'/>\r\n/// <reference path='../Core/ItemsFactory.ts'/>\r\n\r\nnamespace Digdown.UI {\r\n    import log = Core.log;\r\n    import Orientation = Core.Orientation;\r\n\r\n    export class Game {\r\n        private static SPRITE_LIST = [\r\n            '\\u2593',\r\n            '\\u2592',\r\n            '\\u2591',\r\n            '%',\r\n            '#',\r\n            '=',\r\n            '?',\r\n            '&amp;',\r\n        ];\r\n\r\n        private _grid = new Core.Grid();\r\n        private _player = new Core.Player(this._grid.Width/2, -1);\r\n        private _techTree = new Core.TechnologyTree();\r\n        private _tools = new Core.ToolsInventory(this._techTree);\r\n        private _items = new Core.ItemsInventory();\r\n        private _itemFac = new Core.ItemsFactory(this._items);\r\n\r\n        private _money = 0;    \r\n        private _moneyListeners = new Core.Listener();\r\n\r\n        private _fontSize = 16;\r\n        private _viewRows = 100;\r\n        private _yOffset = 0;\r\n        \r\n        constructor() {\r\n            this._player.grid = this._grid;\r\n            this._player.tools = this._tools;\r\n            this._grid.itemsFactory = this._itemFac;\r\n        }\r\n\r\n        private _getOrientationGlyph() : string {\r\n            var orient = this._player.orient;\r\n            \r\n            if (orient == Orientation.NORTH)\r\n                return '^';\r\n            if (orient == Orientation.SOUTH)\r\n                return 'v';\r\n            if (orient == Orientation.EAST)\r\n                return '>';\r\n            if (orient == Orientation.WEST)\r\n                return '<';\r\n                \r\n            return '';\r\n        }\r\n        \r\n        private _getEmptyOrPlayer(x: number, y: number) : string {  \r\n            if (y == this._player.Y && x == this._player.X)\r\n                return this._getOrientationGlyph();\r\n\r\n            return '&nbsp;';\r\n        }\r\n        \r\n        get ToolsInventory() { return this._tools; };\r\n    \r\n        get ItemsInventory() { return this._items; };\r\n    \r\n        get TechnologyTree() { return this._techTree; };\r\n    \r\n        get PlayerPower() { return this._tools.Power; };\r\n    \r\n        getHoverText(x: number, y: number) : string {\r\n            // border offset (1px all sides)\r\n            x -= 2;\r\n            y -= 2;\r\n            \r\n            if (x < 0 || y < 0)\r\n                return null;\r\n            \r\n            var row = Math.floor(y/this._fontSize);      // height of row == height of text\r\n            var col = Math.floor(x/this._fontSize*2);    // text half as wide as tall\r\n            \r\n            row += this._yOffset;\r\n            if (row == this._player.Y && col == this._player.X)\r\n                return 'Power: ' + this.PlayerPower;\r\n            \r\n            if (row < 0)\r\n                return null;\r\n                \r\n            var health = this._grid.healthPercent(col,row);\r\n            if (health === 0)\r\n                return null;\r\n            \r\n            var block = this._grid.block(col, row);\r\n            if (block === null)\r\n                return null;\r\n\r\n            var type = block.Type;\r\n            var dura = block.Durability;\r\n            \r\n            var text = `<label>${block.TypePhrase}</label><br/>`;\r\n            text += 'HP: ' + Math.ceil(health*dura) + '/' + dura;\r\n            return text;\r\n        };\r\n        \r\n        printVisibleGrid() : string {\r\n            var maxRows = this._viewRows;\r\n            var maxSky = Math.ceil(maxRows/3);\r\n            \r\n            log('maxSky: ' + maxSky);\r\n            \r\n            var bottomRow = this._player.Y + Math.ceil(maxRows/2);\r\n            if (bottomRow > this._grid.Height) bottomRow = this._grid.Height;\r\n            \r\n            var sky = 0;\r\n            var topRow = bottomRow - maxRows;\r\n            if (topRow < 0)\r\n            {\r\n                sky = -topRow;\r\n                topRow = 0;\r\n                \r\n                if (sky > maxSky)\r\n                {\r\n                    sky = maxSky;\r\n                    bottomRow += sky;\r\n                }\r\n            }\r\n            \r\n            this._yOffset = sky > 0 ? -sky : topRow;\r\n            \r\n            var i, j;\r\n            var output = '';\r\n            log(\"generating sky\");\r\n            for (i = 0; i < sky; i++)\r\n            {\r\n                for (j = 0; j < this._grid.Width; j++)\r\n                    output += this._getEmptyOrPlayer(j, i-sky);\r\n                    \r\n                output += '</br>';\r\n            }              \r\n            \r\n            log(\"generating ground\");\r\n            for (i = topRow; i < bottomRow; i++)\r\n            { \r\n                for (j = 0; j < this._grid.Width; j++)\r\n                {\r\n                    var block = this._grid.block(j, i);\r\n                    if (block == null)\r\n                        continue;\r\n\r\n                    var type = block.Type;\r\n                    var dura = block.Durability;\r\n\r\n                    if (block.IsCleared)\r\n                        output += this._getEmptyOrPlayer(j, i);\r\n                    else\r\n                        output += Game.SPRITE_LIST[type];\r\n                }\r\n                output += '<br/>';\r\n            }\r\n            return output;\r\n        };\r\n        \r\n        setFontSize(size: string) {\r\n            this._fontSize = Number(size.substr(0, size.length-2)) || this._fontSize;\r\n            log('font size: ' + this._fontSize);\r\n        };\r\n        \r\n        setViewHeight(height: number) {        \r\n            this._viewRows = Math.ceil(height / this._fontSize);\r\n            \r\n            log('view rows: ' + this._viewRows);\r\n        };\r\n        \r\n        get Progress() { \r\n            return Math.max(0, this._player.Y) / this._grid.Height * 100;\r\n        };\r\n        \r\n        get Money() {\r\n            return this._money;\r\n        };\r\n        \r\n        addMoney(money: number) {\r\n            this._money += money;\r\n            this._moneyListeners.callAll(this._money);\r\n        };\r\n        \r\n        subMoney(money: number) {\r\n            this._money -= money;\r\n            this._moneyListeners.callAll(this._money);\r\n        };\r\n        \r\n        addMoneyListener(func: Function) {\r\n            return this._moneyListeners.add(func);\r\n        };\r\n        \r\n        moveUp() {\r\n            this._player.moveUp();\r\n        };\r\n        \r\n        moveDown() {\r\n            this._player.moveDown();\r\n        };\r\n        \r\n        moveLeft() {\r\n            this._player.moveLeft();\r\n        };\r\n        \r\n        moveRight() {\r\n            this._player.moveRight();\r\n        };\r\n    }\r\n}","namespace Digdown.Core {\r\n    export class Item {\r\n\r\n        constructor(private name : string,\r\n                    private desc : string,\r\n                    private amount : number,\r\n                    private value : number,\r\n                    private known : boolean) {}\r\n        \r\n        \r\n        amountListeners = new Listener<AmountListenerFunc>();\r\n        knownListeners = new Listener<KnownListenerFunc>();\r\n        \r\n        get Name() : string {\r\n            return this.name;\r\n        }\r\n        \r\n        get Description() : string {\r\n            return this.desc;\r\n        }\r\n        \r\n        get Amount() : number {\r\n            return this.amount;\r\n        }\r\n        \r\n        get Value() : number {\r\n            return this.value;\r\n        }\r\n        \r\n        get TotalValue() : number {\r\n            return this.amount * this.value;\r\n        }\r\n        \r\n        get IsKnown() : boolean {\r\n            return this.known;\r\n        }\r\n        \r\n        add() {\r\n            this.amount++;\r\n            this.amountListeners.callAll(this.amount);\r\n            \r\n            if (!this.known)\r\n            {\r\n                this.known = true;\r\n                this.knownListeners.callAll(true);\r\n            }\r\n        }\r\n        \r\n        addMany(amount : number) {\r\n            this.amount += amount;\r\n            this.amountListeners.callAll(this.amount);\r\n            \r\n            if (!this.known)\r\n            {\r\n                this.known = true;\r\n                this.knownListeners.callAll(true);\r\n            }\r\n        }\r\n        \r\n        trySell() : number {\r\n            if (this.amount <= 0)\r\n                return -1;\r\n                \r\n            this.amount--;\r\n            this.amountListeners.callAll(this.amount);\r\n            return this.value;\r\n        }\r\n        \r\n        trySellMany(amount : number) : number {\r\n            if (this.amount <= 0)\r\n                return -1;\r\n                \r\n            this.amount -= amount;\r\n            this.amountListeners.callAll(this.amount);\r\n            return this.value * amount;\r\n        }\r\n        \r\n        trySellAll() : number {\r\n            if (this.amount <= 0)\r\n                return -1;\r\n                \r\n            let value = this.TotalValue;\r\n            this.amount = 0;\r\n            this.amountListeners.callAll(this.amount);\r\n            return value;\r\n        }\r\n        \r\n        addAmountListener(func : AmountListenerFunc) {\r\n            return this.amountListeners.add(func);\r\n        }\r\n        \r\n        addKnownListener(func : KnownListenerFunc) {\r\n            return this.knownListeners.add(func);\r\n        }\r\n    }\r\n}","/// <reference path='../Core/Common.ts'/>\r\n/// <reference path='../Core/Item.ts'/>\r\n\r\nnamespace Digdown.UI {\r\n    var log = Core.log;\r\n    var withSuffix = Core.withSuffix;\r\n\r\n    export class ItemBox {\r\n        private itemBox: HTMLDivElement = document.createElement('div');\r\n        private title: HTMLHeadingElement = document.createElement('h4');\r\n        private amountLbl: HTMLLabelElement = document.createElement('label');\r\n        private valueLbl: HTMLLabelElement = document.createElement('label');\r\n        private sellBtn: HTMLButtonElement = document.createElement('button');\r\n        private sell100Btn: HTMLButtonElement = document.createElement('button');\r\n        private sellAllBtn: HTMLButtonElement = document.createElement('button');\r\n\r\n        constructor(private game: Game,\r\n                    private item: Core.Item) {\r\n            this.title.textContent = item.Name;\r\n            this.amountLbl.textContent = 'x ' + item.Amount;\r\n            this.valueLbl.textContent = '$ ' + item.Value + ' per';\r\n            this.sellBtn.textContent = 'Sell';\r\n            this.sell100Btn.textContent = 'Sell x100';\r\n            this.sellAllBtn.textContent = 'Sell All';\r\n\r\n            this.itemBox.title = item.Description;\r\n\r\n            this.sellBtn.onclick = this.clickSellButton;\r\n            this.sell100Btn.onclick = this.clickSell100Button;\r\n            this.sellAllBtn.onclick = this.clickSellAllButton;\r\n\r\n            this.checkKnown(item.IsKnown);\r\n            this.checkAmount(item.Amount);\r\n            \r\n            item.addKnownListener(this.checkKnown);\r\n            item.addAmountListener(this.checkAmount);\r\n\r\n            this.itemBox.appendChild(this.title);\r\n            this.itemBox.appendChild(this.amountLbl);\r\n            this.itemBox.appendChild(this.valueLbl);\r\n            this.itemBox.appendChild(this.sellBtn);\r\n            this.itemBox.appendChild(this.sell100Btn);\r\n            this.itemBox.appendChild(this.sellAllBtn);\r\n        }\r\n\r\n        get ItemBox() {\r\n            return this.itemBox;\r\n        }\r\n\r\n        private clickSellButton = () => {\r\n            var sale = this.item.trySell();\r\n            if (sale >= 0)\r\n                this.game.addMoney(sale);\r\n            else\r\n                alert('You cannot sell that item');\r\n        }\r\n\r\n        private clickSell100Button = () => {\r\n            var sale = this.item.trySellMany(100);\r\n            if (sale >= 0)\r\n                this.game.addMoney(sale);\r\n            else\r\n                alert('You cannot sell 100 of that item');\r\n        }\r\n\r\n        private clickSellAllButton = () => {\r\n            var sale = this.item.trySellAll();\r\n            if (sale >= 0)\r\n                this.game.addMoney(sale);\r\n            else\r\n                alert('You cannot sell those items');\r\n        }\r\n        \r\n        private checkAmount = (amount: number) => {\r\n            this.sellBtn.disabled = amount <= 0;\r\n            this.sell100Btn.disabled = amount < 100;\r\n            \r\n            if (amount < 100)   this.sell100Btn.style.display = 'none';\r\n            else                this.sell100Btn.style.display = 'block';\r\n            \r\n            if (amount < 1000)  this.sellAllBtn.style.display = 'none';\r\n            else                this.sellAllBtn.style.display = 'block';\r\n            \r\n            this.amountLbl.textContent = 'x ' + withSuffix(amount);\r\n            if (amount > 1000)  this.amountLbl.title = String(amount);\r\n            else                this.amountLbl.title = '';\r\n        }\r\n        \r\n        private checkKnown = (known: boolean) => {\r\n            if (known)\r\n                this.itemBox.style.display = 'block';\r\n            else\r\n                this.itemBox.style.display = 'none';\r\n        }\r\n    }\r\n}","/// <reference path='../Core/Common.ts'/>\r\n\r\nnamespace Digdown.UI {\r\n    import log = Core.log;\r\n\r\n    export class Main {\r\n       \r\n        private game = new Game();\r\n                \r\n        private wrapper: HTMLDivElement = <HTMLDivElement>document.getElementById('wrapper');\r\n        private tooltip: HTMLDivElement = <HTMLDivElement>document.getElementById('tooltip');\r\n        private gameScreen: HTMLDivElement = <HTMLDivElement>document.getElementById('gameScreen');\r\n        private progCursor: HTMLDivElement = <HTMLDivElement>document.getElementById('progCursor');    \r\n        \r\n        private moneyDiv: HTMLDivElement = <HTMLDivElement>document.getElementById('money');\r\n        \r\n        private toolsTab: HTMLLIElement = <HTMLLIElement>document.getElementById('tools');\r\n        private itemsTab: HTMLLIElement = <HTMLLIElement>document.getElementById('items');\r\n        private econTab: HTMLLIElement = <HTMLLIElement>document.getElementById('econ');\r\n        private techTab: HTMLLIElement = <HTMLLIElement>document.getElementById('tech');\r\n        private busiTab: HTMLLIElement = <HTMLLIElement>document.getElementById('busi');\r\n\r\n        private toolBoxList: HTMLDivElement = <HTMLDivElement>document.getElementById('toolsList');\r\n        private itemBoxList: HTMLDivElement = <HTMLDivElement>document.getElementById('itemsList');\r\n        private econBoxList: HTMLDivElement = <HTMLDivElement>document.getElementById('econList');\r\n        private techBoxList: HTMLDivElement = <HTMLDivElement>document.getElementById('techList');\r\n        private busiBoxList: HTMLDivElement = <HTMLDivElement>document.getElementById('busiList');\r\n        \r\n        constructor() {\r\n            log(\"Game has begun\");\r\n\r\n            var tools = this.game.ToolsInventory.Tools;\r\n            for (var t in tools) {\r\n                let box = new ToolBox(this.game, tools[t]);\r\n                this.toolBoxList.appendChild(box.ToolBox);\r\n            }\r\n\r\n            var items = this.game.ItemsInventory.Items;\r\n            for (var i in items) {\r\n                let box = new ItemBox(this.game, items[i]);\r\n                this.itemBoxList.appendChild(box.ItemBox);\r\n            }\r\n            \r\n            var techs = this.game.TechnologyTree.Technologies;\r\n            for (var h in techs) {\r\n                let box = new TechBox(this.game, techs[h]);\r\n                this.techBoxList.appendChild(box.TechBox);\r\n            }\r\n\r\n            this.toolsTab.onclick = this.changeTab(this.toolsTab, this.toolBoxList);\r\n            this.itemsTab.onclick = this.changeTab(this.itemsTab, this.itemBoxList);            \r\n            this.econTab.onclick = this.changeTab(this.econTab, this.econBoxList);            \r\n            this.techTab.onclick = this.changeTab(this.techTab, this.techBoxList);            \r\n            this.busiTab.onclick = this.changeTab(this.busiTab, this.busiBoxList);\r\n\r\n            this.game.setFontSize(this.gameScreen.style.fontSize);\r\n            \r\n            window.onresize = this.onResizeFunc;\r\n            this.onResizeFunc();\r\n            \r\n            this.updateMoney(this.game.Money);\r\n            this.game.addMoneyListener(this.updateMoney);\r\n\r\n            this.gameScreen.onmousemove = this.updateHover;\r\n            this.gameScreen.onmouseleave = this.hideTooltip;\r\n            document.onkeydown = this.onKeyDownFunc;\r\n\r\n            this.techTab.click();\r\n            this.toolsTab.click();\r\n\r\n            this.gameScreen.innerHTML = this.game.printVisibleGrid();\r\n        }\r\n\r\n        private updateMoney = (money: number) => {\r\n            this.moneyDiv.textContent = '$ ' + money\r\n        }\r\n        \r\n        private updateHover = (event: MouseEvent) => {\r\n            var x = event.pageX - this.gameScreen.offsetLeft;\r\n            var y = event.pageY - this.gameScreen.offsetTop;\r\n            \r\n            var hoverText = this.game.getHoverText(x, y);\r\n            if (hoverText === null) {\r\n                this.tooltip.style.display = 'none';\r\n                return;\r\n            }\r\n            \r\n            this.tooltip.innerHTML = this.game.getHoverText(x, y);\r\n            this.tooltip.style.top = (event.pageY+2)+'px';\r\n            this.tooltip.style.left = (event.pageX+2)+'px';\r\n            this.tooltip.style.display = 'block';\r\n        }\r\n\r\n        private hideTooltip = () => {\r\n            this.tooltip.style.display = 'none';\r\n        }\r\n        \r\n        private onResizeFunc = () => {\r\n            this.wrapper.style.height = window.innerHeight + 'px';\r\n            this.game.setViewHeight(this.gameScreen.offsetHeight);\r\n        }\r\n        \r\n        // keycodes found here http://www.javascriptkeycode.com/\r\n        private onKeyDownFunc = (event: KeyboardEvent) => {\r\n            if (event.which == 37)          // left arrow\r\n                this.game.moveLeft();\r\n            if (event.which == 38)          // up arrow\r\n                this.game.moveUp();\r\n            if (event.which == 39)          // right arrow\r\n                this.game.moveRight();\r\n            if (event.which == 40)          // down arrow\r\n                this.game.moveDown();\r\n\r\n            this.gameScreen.innerHTML = this.game.printVisibleGrid(); \r\n            this.progCursor.style.top = this.game.Progress + '%';        \r\n        }\r\n        // this is safe only because `this` isn't being used\r\n        private changeTab(tab: HTMLLIElement, list: HTMLDivElement) {\r\n            return function() {\r\n                log('doing a thing');\r\n                var parent = tab.parentElement;\r\n                var select = parent.querySelector('.selected');\r\n                if (select === tab)\r\n                    return;\r\n                \r\n                var content = parent.parentElement.querySelector('.content');\r\n                for (let node of content.children) {\r\n                    (<HTMLElement>node).style.display = 'none';\r\n                }\r\n                list.style.display = 'block';\r\n                \r\n                if (select)\r\n                    select.classList.remove('selected');\r\n                \r\n                tab.classList.add('selected');\r\n            }\r\n        }\r\n    }\r\n}","namespace Digdown.UI {\r\n    var log = Core.log;\r\n    \r\n    export class TechBox {\r\n        private techBox: HTMLDivElement = document.createElement('div');\r\n        private title: HTMLHeadingElement = document.createElement('h3');\r\n        private levelLbl: HTMLLabelElement = document.createElement('label');\r\n        private resCostLbl: HTMLLabelElement = document.createElement('label');   \r\n        private researchBtn: HTMLButtonElement = document.createElement('button');\r\n        \r\n        constructor(private game: Game,\r\n                    private tech: Core.Technology) {\r\n            this.title.textContent = tech.Name;\r\n            this.researchBtn.textContent = 'Research';\r\n            this.researchBtn.onclick = this.clickResearchButton;\r\n\r\n            this.checkCost(tech.ResearchCost);\r\n            this.checkLevel(tech.Level);\r\n            this.checkVisibility(tech.IsVisible);\r\n            \r\n            tech.addCostListener(this.checkCost);\r\n            tech.addLevelListener(this.checkLevel);\r\n            tech.addVisibilityListener(this.checkVisibility);\r\n                \r\n            this.checkMoney(game.Money);\r\n            game.addMoneyListener(this.checkMoney);\r\n            \r\n            this.techBox.appendChild(this.title);\r\n            this.techBox.appendChild(this.levelLbl);\r\n            this.techBox.appendChild(this.resCostLbl);\r\n            this.techBox.appendChild(this.researchBtn);\r\n        }\r\n\r\n        get TechBox() {\r\n            return this.techBox;\r\n        }\r\n\r\n        private clickResearchButton = () => {\r\n            var cost = this.tech.tryResearch(this.game.Money);\r\n            if (cost >= 0)\r\n                this.game.subMoney(cost);\r\n            else\r\n                alert('You do not have enough money to research ' + this.tech.Name);\r\n        }\r\n        \r\n        private checkCost = (cost: number) => {\r\n            this.resCostLbl.textContent = 'Next: $ ' + cost;\r\n            if (cost > this.game.Money)\r\n                this.researchBtn.disabled = true;\r\n        }\r\n        \r\n        private checkMoney = (money: number) => {\r\n            if (money < this.tech.ResearchCost)\r\n                this.researchBtn.disabled = true;\r\n            else\r\n                this.researchBtn.disabled = false;\r\n        }\r\n        \r\n        private checkLevel = (level: number) => {\r\n            this.levelLbl.textContent = 'Level: ' + level;\r\n        }\r\n        \r\n        private checkVisibility = (visible: boolean) => {\r\n            if (visible)\r\n                this.techBox.style.display = 'block';\r\n            else\r\n                this.techBox.style.display = 'none';\r\n        }\r\n    }\r\n}","/// <reference path='Technology.ts'/>\r\n\r\nnamespace Digdown.Core {\r\n    export class Tool {\r\n        private static defaultCostFunc : CostFunction = (baseCost, amount) => baseCost + Math.floor(amount*amount/4)\r\n        private known : boolean;\r\n        private minLevel : number;\r\n        \r\n        private buyCost : number;\r\n        private saleCost : number;\r\n\r\n        private amountListeners = new Listener<AmountListenerFunc>();\r\n        private costListeners = new Listener<CostListenerFunc>();\r\n\r\n        saleMult = 0.75;\r\n        \r\n        constructor (private name : string,\r\n                     private amount : number,\r\n                     private power : number,\r\n                     private baseCost : number,\r\n                     private technology : Technology,\r\n                     private workers: number,\r\n                     private level : number,\r\n                     private costFunc : CostFunction = Tool.defaultCostFunc) {\r\n            \r\n            this.minLevel = this.level;\r\n\r\n            if (amount > 0)\r\n                this.updateCosts(amount);\r\n            else\r\n                this.buyCost = baseCost;\r\n        }\r\n        \r\n        private getCostForAmount (amount : number) : number {\r\n            return this.costFunc(this.baseCost, amount);\r\n        }\r\n\r\n        private getBuyCost(amount : number) : number {\r\n            return this.getCostForAmount(amount+1);\r\n        }\r\n        \r\n        private getSaleCost(amount : number) : number {\r\n            return this.getCostForAmount(amount) * this.saleMult;\r\n        }\r\n\r\n        private updateCosts (amount : number) {\r\n            this.buyCost = this.getBuyCost(amount);\r\n            this.saleCost = this.getSaleCost(amount);\r\n        }\r\n        \r\n        tryBuy(money : number) : number {\r\n            if (this.minLevel < this.technology.Level)\r\n                return -1;\r\n                \r\n            let cost = this.BuyCost;\r\n            if (money >= cost)\r\n            {\r\n                this.amount++;\r\n                \r\n                this.buyCost = this.getBuyCost(this.amount);\r\n                this.saleCost = this.getSaleCost(this.amount);\r\n                this.costListeners.callAll(this.buyCost);\r\n                this.amountListeners.callAll(this.amount);\r\n                                       \r\n                return cost;\r\n            }\r\n            return -1;\r\n        };\r\n        \r\n        trySell() : number {\r\n            //if (_minLevel < _technology.getLevel())\r\n                //return -1;\r\n                \r\n            if (this.amount > 0)\r\n            {\r\n                let sale = this.SaleCost;\r\n                this.amount--;\r\n                \r\n                this.buyCost = this.getBuyCost(this.amount);\r\n                this.saleCost = this.getSaleCost(this.amount);\r\n                this.costListeners.callAll(this.buyCost);\r\n                this.amountListeners.callAll(this.amount);\r\n                        \r\n                return sale;\r\n            }\r\n            return -1;\r\n        };\r\n        \r\n        addCostListener(func : CostListenerFunc) {\r\n            this.costListeners.add(func);\r\n        }\r\n        \r\n        addAmountListener(func : AmountListenerFunc) {\r\n            this.amountListeners.add(func);\r\n        }\r\n        \r\n        get Name() : string {\r\n            return this.name;\r\n        }\r\n\r\n        get Level() : number {\r\n            return this.level;\r\n        }\r\n\r\n        get Amount() : number {\r\n            return this.amount;\r\n        }\r\n\r\n        get Workers() : number {\r\n            return this.workers;\r\n        }\r\n\r\n        get BuyCost() : number {\r\n            return this.buyCost;\r\n        }\r\n\r\n        get SaleCost() : number {\r\n            return this.saleCost;\r\n        }\r\n        \r\n        get Technology() : Technology {\r\n            return this.technology;\r\n        }\r\n        \r\n        get MinTechLevel() : number {\r\n            return this.minLevel;\r\n        }\r\n\r\n        get TotalPower() : number {\r\n            return this.amount * this.power;\r\n        }\r\n\r\n        get IsKnown() : boolean {\r\n            return this.amount > 0;\r\n        }\r\n    }\r\n}","/// <reference path='../Core/Common.ts'/>\r\n/// <reference path='../Core/Tool.ts'/>\r\n\r\nnamespace Digdown.UI {\r\n    import log = Core.log;\r\n    import withSuffix = Core.withSuffix;\r\n    \r\n    export class ToolBox {\r\n        private toolBox: HTMLDivElement = document.createElement('div');\r\n        private title: HTMLHeadingElement = document.createElement('h3');\r\n        private amountLbl: HTMLLabelElement = document.createElement('label');\r\n        private buyCostLbl: HTMLLabelElement = document.createElement('label');   \r\n        private buyBtn: HTMLButtonElement = document.createElement('button');\r\n        private sellBtn: HTMLButtonElement = document.createElement('button');\r\n\r\n        constructor (private game: Game,\r\n                     private tool: Core.Tool) {\r\n            this.buyBtn.textContent = 'Buy';\r\n            this.sellBtn.textContent = 'Sell';\r\n\r\n            this.title.textContent = this.tool.Name;\r\n            this.buyBtn.onclick = this.clickBuyButton;\r\n            this.sellBtn.onclick = this.clickSellButton;\r\n            \r\n            this.checkCost(tool.BuyCost);\r\n            this.checkAmount(tool.Amount);\r\n            \r\n            tool.addCostListener(this.checkCost);\r\n            tool.addAmountListener(this.checkAmount);\r\n    \r\n            this.checkMoney(game.Money);\r\n            game.addMoneyListener(this.checkMoney);\r\n            \r\n            var tech = tool.Technology;\r\n            this.checkResearched(tech.Level);\r\n            tech.addLevelListener(this.checkResearched);\r\n                \r\n            this.toolBox.appendChild(this.title);\r\n            this.toolBox.appendChild(this.amountLbl);\r\n            this.toolBox.appendChild(this.buyCostLbl);\r\n            this.toolBox.appendChild(this.buyBtn);\r\n            this.toolBox.appendChild(this.sellBtn);\r\n        }\r\n\r\n        get ToolBox() {\r\n            return this.toolBox;\r\n        }\r\n\r\n        private clickBuyButton = () => {\r\n            var cost = this.tool.tryBuy(this.game.Money);\r\n            if (cost >= 0)\r\n                this.game.subMoney(cost);\r\n            else\r\n                alert('You do not have enough money to buy a ' + this.tool.Name);\r\n        }\r\n\r\n        private clickSellButton = () => {\r\n            var sale = this.tool.trySell();\r\n            if (sale >= 0)\r\n                this.game.addMoney(sale);\r\n            else\r\n                alert('You cannot sell that tool');\r\n        }\r\n\r\n        private checkCost = (cost: number) => {\r\n            this.buyCostLbl.textContent = 'Next: $ ' + cost;\r\n            if (cost > this.game.Money)\r\n                this.buyBtn.disabled = true;\r\n        }\r\n        \r\n        private checkMoney = (money: number) => {\r\n            if (money < this.tool.BuyCost)\r\n                this.buyBtn.disabled = true;\r\n            else\r\n                this.buyBtn.disabled = false;\r\n        }\r\n        \r\n        private checkAmount = (amount: number) => {\r\n            this.sellBtn.disabled = amount <= 0;\r\n            this.amountLbl.textContent = 'x ' + withSuffix(amount);\r\n            if (amount > 1000)  this.amountLbl.title = String(amount);\r\n            else                this.amountLbl.title = '';\r\n        }\r\n        \r\n        private checkResearched = (level: number) => {\r\n            if (level >= this.tool.MinTechLevel || this.tool.IsKnown)\r\n                this.toolBox.style.display = 'block';\r\n            else\r\n                this.toolBox.style.display = 'none';\r\n        }\r\n    }\r\n}","namespace Digdown.Core {\r\n    export interface ItemPrize {item : Item, amount : number}\r\n    export interface ProduceListenerFunc { (prize : ItemPrize) : void }\r\n\r\n    export class ItemChance {\r\n        \r\n        constructor (private item : Item,\r\n                     private chance : number,\r\n                     private minAmount : number,\r\n                     private maxAmount : number) {\r\n\r\n             minAmount = minAmount > 0 ? minAmount < maxAmount ? minAmount : maxAmount : 1;\r\n             maxAmount = maxAmount > minAmount ? maxAmount : minAmount;\r\n        }\r\n        \r\n        diff = this.maxAmount - this.minAmount;\r\n            \r\n        rollForItems() : ItemPrize {\r\n            var c = Math.random();\r\n            if (c > this.chance)\r\n                return null;\r\n                \r\n            var a = Math.random();\r\n            a = Math.round(a * this.diff + this.minAmount);\r\n            \r\n            log('Produced ' + a + ' items of type \"' + this.item.Name + '\"');\r\n            \r\n            return {'item': this.item, 'amount': a};\r\n        }\r\n    }\r\n}"]}